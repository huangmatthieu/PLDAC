package lfi.tools;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import org.apache.commons.csv.*;

/**
 * CSV Parser qui peut être rembobiné
 * @author Gilles
 *
 */
public class RewindableCSVParser {
	private String filename;
<<<<<<< .mine
	private FileReader in;;
	private BufferedReader csvbr;
	
	
	public RewindableCSVParser(String filename) {
=======
	private FileReader in;
	private CSVParser csvPars;
	/**
	 * Nécessite le nom du fichier à la construction
	 * @param filename
	 * @throws FileNotFoundException
	 */
	public RewindableCSVParser(String filename) throws FileNotFoundException{
>>>>>>> .r4316
		this.filename = filename;
<<<<<<< .mine
		try {
			in = new FileReader(filename);
			csvbr = new BufferedReader(in) ;
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
=======
		createFileReader();
		// CREER LE CSV PARSER AVEC LE READER
>>>>>>> .r4316
	}
	
<<<<<<< .mine

	/**
	 * @return the in
	 */
	public FileReader getIn() {
		return in;
	}

	/**
	 * @param in the in to set
	 */
	public void setIn(FileReader in) {
		this.in = in;
	}


	public BufferedReader getCSVParser() {
		return csvbr;
	}
=======
	public CSVParser getCSVParser() {
		return csvPars;
	}
>>>>>>> .r4316
	

	public void rewind(){
<<<<<<< .mine

		try {
			in.close();
			csvbr.close();
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		createFileReader();
=======
		try {
			in.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		createFileReader();
	}
	
	/**
	 * Méthode privée pour créer le FileReader
	 */
	private void createFileReader() {
		try {
			in = new FileReader(this.filename);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
>>>>>>> .r4316
	}
	
	/**
	 * Méthode privée pour créer le FileReader
	 */
	private void createFileReader() {
		try {
			in = new FileReader(this.filename);
			csvbr = new BufferedReader(this.in);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}	


	}
	

}