package lfi.fuzzy.general;

/**
 * Classe concrète représentant un sef trapézoidal <br/>
 * Le trapèze est constitué des points (a,0)-(b,1)-(c,1)-(d,0), avec a <= b <= c <= d
 * @author LIP6 / LFI
 *
 */
/**
 * @author LIP6 / LFI
 *
 */
public class Trapezoid extends FuzzySet {
	private double a, b, c, d;

	/**
	 * Constructeur a 4 paramètres
	 * 
	 * @param a
	 * @param b
	 * @param c
	 * @param d
	 */
	public Trapezoid(double a, double b, double c, double d) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
	}

	public double getA() {
		return a;
	}

	public void setA(double a) {
		this.a = a;
	}

	public double getB() {
		return b;
	}

	public void setB(double b) {
		this.b = b;
	}

	public double getC() {
		return c;
	}

	public void setC(double c) {
		this.c = c;
	}

	public double getD() {
		return d;
	}

	public void setD(double d) {
		this.d = d;
	}

	/** Retourne l'appartenance de x au sef
	 * @see lfi.fuzzy.general.FuzzySet#mShip(double)
	 */
	@Override
	public double mShip(double x) {
		if (x <= a)
			return 0.0;
		if ((x > a) && (x < b))
			return (x - a) / (b - a);
		if ((x >= b) && (x <= c))
			return 1.0;
		if ((x > c) && (x < d))
			return (d - x) / (d - c);
		else
			return 0.0;
	}
}
